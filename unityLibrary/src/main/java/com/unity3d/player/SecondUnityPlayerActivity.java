// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN
package com.unity3d.player;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.res.Configuration;
import android.graphics.PixelFormat;
import android.os.Bundle;
import android.view.KeyEvent;
import android.view.MotionEvent;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;

import androidx.annotation.Nullable;

public class SecondUnityPlayerActivity extends Activity implements IUnityPlayerLifecycleEvents
{
    protected UnityPlayer mUnityPlayer; // don't change the name of this variable; referenced from native code
    FrameLayout fl_forUnity2;
    public static Context mContext;
    TextView user_id_in_post;
    TextView time_in_post;
    TextView price_in_post;
    TextView contents1;
    TextView contents2;
    TextView contents3;
    TextView contents4;
    TextView contents5;
    Button btn_chat_in_post;
    String cur_name[];
    String cur_part[];
    String price;
    //Declare the buttons

    ImageView imageView;
    // Setup activity layout
    @Override protected void onCreate(Bundle savedInstanceState)
    {
        requestWindowFeature(Window.FEATURE_NO_TITLE);
        super.onCreate(savedInstanceState);

        getWindow().setFormat(PixelFormat.RGBX_8888); // <--- This makes xperia play happy

        mUnityPlayer = new UnityPlayer(this);
        if (mUnityPlayer.getSettings ().getBoolean ("hide_status_bar", true))
        {
            setTheme(android.R.style.Theme_NoTitleBar_Fullscreen);
            getWindow ().setFlags (WindowManager.LayoutParams.FLAG_FULLSCREEN,
                    WindowManager.LayoutParams.FLAG_FULLSCREEN);
        }

        //setContentView(mUnityPlayer);
        //Set the content to main
        setContentView(R.layout.activity_post);
        Intent intent =getIntent();
        cur_name=intent.getStringArrayExtra("cur_name");
        cur_part=intent.getStringArrayExtra("cur_part");
        String user_id=intent.getStringExtra("user_id");
        String time=intent.getStringExtra("time");
        price=intent.getStringExtra("price");
        //Inflate the frame layout from XML
        this.fl_forUnity2 = (FrameLayout)findViewById(R.id.fl_forUnity2);

        this.user_id_in_post = (TextView)this.findViewById(R.id.user_id_in_post);
        this.time_in_post = (TextView)this.findViewById(R.id.time_in_post);
        this.price_in_post = (TextView)this.findViewById(R.id.price_in_post);
        this.contents1 = (TextView)this.findViewById(R.id.contents1);
        this.contents2 = (TextView)this.findViewById(R.id.contents2);
        this.contents3 = (TextView)this.findViewById(R.id.contents3);
        this.contents4 = (TextView)this.findViewById(R.id.contents4);
        this.contents5 = (TextView)this.findViewById(R.id.contents5);
        this.btn_chat_in_post = (Button) this.findViewById(R.id.btn_chat_in_post);
        //Add the mUnityPlayer view to the FrameLayout, and set it to fill all the area available
        this.fl_forUnity2.addView(mUnityPlayer.getView(),
                FrameLayout.LayoutParams.MATCH_PARENT, FrameLayout.LayoutParams.MATCH_PARENT);

        mContext=this;

        user_id_in_post.setText(user_id+"님이 공유한 커스텀입니다.");
        time_in_post.setText(time);
        price_in_post.setText(price);
        String frame_split[]=cur_part[0].split("/");
        String wheelset_split[]=cur_part[1].split("/");
        String handlebar_split[]=cur_part[2].split("/");
        String saddle_split[]=cur_part[3].split("/");
        String groupset_split[]=cur_part[4].split("/");
        contents1.setText("프레임 : "+cur_name[0]+"\n("+frame_split[1]+"kg, "+frame_split[2]+"₩)");
        contents2.setText("휠셋 : "+cur_name[1]+"\n("+wheelset_split[1]+"kg, "+wheelset_split[2]+"₩)");
        contents3.setText("핸들바 : "+cur_name[2]+"\n("+handlebar_split[1]+"kg, "+handlebar_split[2]+"₩)");
        contents4.setText("안장 : "+cur_name[3]+"\n("+saddle_split[1]+"kg, "+saddle_split[2]+"₩)");
        contents5.setText("구동계 : "+cur_name[4]+"\n("+groupset_split[1]+"kg, "+groupset_split[2]+"₩)");
        UnityPlayer.UnitySendMessage("GameManager", "Show", cur_part[0]);
        UnityPlayer.UnitySendMessage("GameManager", "Show", cur_part[1]);
        UnityPlayer.UnitySendMessage("GameManager", "Show", cur_part[2]);
        UnityPlayer.UnitySendMessage("GameManager", "Show", cur_part[3]);
        UnityPlayer.UnitySendMessage("GameManager", "Show", cur_part[4]);

        btn_chat_in_post.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                Intent intent2 = new Intent(getApplicationContext(), PopupActivity.class);
                startActivityForResult(intent2,9090);
            }
        });
        mUnityPlayer.requestFocus();

    }

    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        if (requestCode == 9090 && resultCode == 9090) {
            String name = data.getStringExtra("result");
            Intent intent = new Intent();
            intent.putExtra("get_custom",name);
            intent.putExtra("name",cur_name);
            intent.putExtra("part",cur_part);
            intent.putExtra("price",price);
            SecondUnityPlayerActivity.this.setResult(8090, intent);
            SecondUnityPlayerActivity.this.finish();
            SecondUnityPlayerActivity.this.onBackPressed();
        }
    }

    // When Unity player unloaded move task to background
    @Override public void onUnityPlayerUnloaded() {
        moveTaskToBack(true);
    }

    // Callback before Unity player process is killed
    @Override public void onUnityPlayerQuitted() {
    }



    // Quit Unity
    @Override protected void onDestroy ()
    {
        mUnityPlayer.destroy();
        super.onDestroy();
    }

    // Pause Unity
    @Override protected void onPause()
    {
        super.onPause();
        mUnityPlayer.pause();
    }

    // Resume Unity
    @Override protected void onResume()
    {
        super.onResume();
        mUnityPlayer.resume();
    }

    // Low Memory Unity
    @Override public void onLowMemory()
    {
        super.onLowMemory();
        mUnityPlayer.lowMemory();
    }

    // Trim Memory Unity
    @Override public void onTrimMemory(int level)
    {
        super.onTrimMemory(level);
        if (level == TRIM_MEMORY_RUNNING_CRITICAL)
        {
            mUnityPlayer.lowMemory();
        }
    }

    // This ensures the layout will be correct.
    @Override public void onConfigurationChanged(Configuration newConfig)
    {
        super.onConfigurationChanged(newConfig);
        mUnityPlayer.configurationChanged(newConfig);
    }

    // Notify Unity of the focus change.
    @Override public void onWindowFocusChanged(boolean hasFocus)
    {
        super.onWindowFocusChanged(hasFocus);
        mUnityPlayer.windowFocusChanged(hasFocus);
    }

    // For some reason the multiple keyevent type is not supported by the ndk.
    // Force event injection by overriding dispatchKeyEvent().
    @Override public boolean dispatchKeyEvent(KeyEvent event)
    {
        if (event.getAction() == KeyEvent.ACTION_MULTIPLE)
            return mUnityPlayer.injectEvent(event);
        return super.dispatchKeyEvent(event);
    }

    // Pass any events not handled by (unfocused) views straight to UnityPlayer
    @Override public boolean onKeyUp(int keyCode, KeyEvent event)     { return mUnityPlayer.injectEvent(event); }
    @Override public boolean onTouchEvent(MotionEvent event)          { return mUnityPlayer.injectEvent(event); }
    /*API12*/ public boolean onGenericMotionEvent(MotionEvent event)  { return mUnityPlayer.injectEvent(event); }
    @Override public boolean onKeyDown(int keyCode, KeyEvent event)   {
        if ((keyCode == KeyEvent.KEYCODE_BACK)) {
            onBackPressed();
        }return mUnityPlayer.injectEvent(event);
    }
}
